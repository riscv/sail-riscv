name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release, e.g. 1.0.0"
        required: true
      notes:
        description: "Release notes"
        required: false
      prerelease:
        description: "Is this a pre-release (beta, RC, etc.)?"
        required: false
        type: boolean
      draft:
        description: "Is this a draft release (not public; you can publish it later)?"
        default: true
        required: false
        type: boolean

permissions:
  id-token: write
  attestations: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: Linux-x86_64
            os: ubuntu-latest
            container: rockylinux:8.9.20231119

          - name: Linux-aarch64
            os: ubuntu-24.04-arm
            container: rockylinux:8.9.20231119

          # TODO: Mac. We need a Mac binary release of the Sail compiler first.
          # - name: mac-arm64
          #   os: macos-latest
          #   container: ""

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    env:
      SAIL_VERSION: "0.20"
      # This helps with reproducible builds by not embedding variable timestamps in files.
      # This is needed in particular for the Debian package's compressed changelog.
      # See the comments in `cmake/packaging.cmake`.
      SOURCE_DATE_EPOCH: "0"

    steps:
      # This must be before checkout otherwise Github will use a zip of the
      # code instead of git clone.
      - name: Install dependencies (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          dnf update -y --enablerepo=devel
          dnf install -y --enablerepo=devel \
              pkg-config \
              gmp-static \
              libstdc++-static \
              curl \
              git \
              make \
              gcc \
              gcc-c++ \
              cmake \
              ninja-build
          curl --location --output sail.tar.gz https://github.com/rems-project/sail/releases/download/$SAIL_VERSION-linux-binary/sail-$(uname)-$(arch).tar.gz
          tar --directory=/usr/local --strip-components=1 --extract --file sail.tar.gz

      # TODO: Mac
      # - name: Install dependencies (Mac)
      #   if: startsWith(matrix.os, 'macos')
      #   run: |
      #     brew install --force --overwrite ...

      - uses: actions/checkout@v5

      - name: Build simulator
        run: |
          git config --global --add safe.directory '*'
          cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=Release -DSTATIC=TRUE -DENABLE_RISCV_TESTS=TRUE -DENABLE_RISCV_VECTOR_TESTS_V128_E32=TRUE
          cd build
          ninja all
          ctest
          cpack

      - name: Build JSON and HTML
        if: matrix.name == 'Linux-x86_64'
        run: |
          cd build
          ninja generated_sail_riscv_docs

      - name: "Generate attestations (Linux-x86_64)"
        if: matrix.name == 'Linux-x86_64'
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: |
            build/sail-riscv-*
            build/model/sail_riscv_model.json
            build/model/sail_riscv_html.tgz

      - name: "Generate attestations (Linux-aarch64)"
        if: matrix.name == 'Linux-aarch64'
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: |
            build/sail-riscv-*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.name }}
          path: |
            build/sail-riscv-*
            build/model/sail_riscv_model.json
            build/model/sail_riscv_html.tgz
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      # Required to create a release.
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release-Linux-x86_64/sail-riscv-Linux-x86_64.tar.gz
            release-Linux-aarch64/sail-riscv-Linux-aarch64.tar.gz
            release-Linux-x86_64/model/sail_riscv_model.json
            release-Linux-x86_64/model/sail_riscv_html.tgz
          fail_on_unmatched_files: true
          tag_name: ${{ inputs.version }}
          body: ${{ inputs.notes }}
          prerelease: ${{ inputs.prerelease }}
          draft: ${{ inputs.draft }}
