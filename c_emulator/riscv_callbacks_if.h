#pragma once

#include "sail.h"

// This class is not declared in "riscv_callbacks.h" as that file is
// included in the C model generated by Sail.

class callbacks_if {
public:
  virtual ~callbacks_if() = default;

  // TODO: finding ways to improve the format
  virtual void mem_write_callback(const char *type, sbits paddr, uint64_t width,
                                  lbits value)
      = 0;
  virtual void mem_read_callback(const char *type, sbits paddr, uint64_t width,
                                 lbits value)
      = 0;
  virtual void mem_exception_callback(sbits paddr, uint64_t num_of_exception)
      = 0;
  virtual void xreg_full_write_callback(const_sail_string abi_name, sbits reg,
                                        sbits value)
      = 0;
  virtual void freg_write_callback(unsigned reg, sbits value) = 0;
  virtual void csr_full_write_callback(const_sail_string csr_name, unsigned reg,
                                       sbits value)
      = 0;
  virtual void csr_full_read_callback(const_sail_string csr_name, unsigned reg,
                                      sbits value)
      = 0;
  virtual void vreg_write_callback(unsigned reg, lbits value) = 0;
  virtual void pc_write_callback(sbits value) = 0;
  virtual void trap_callback() = 0;
};

void register_callback(callbacks_if *cb);
void remove_callback(callbacks_if *cb);
