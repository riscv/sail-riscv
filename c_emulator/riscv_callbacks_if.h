#pragma once

#include "riscv_callbacks.h"

// This class is not declared in "riscv_callbacks.h" as that file is
// included in the C model generated by Sail.

class callbacks_if {
public:
  virtual ~callbacks_if() { };

  virtual void mem_write_callback(const char *type, uint64_t paddr,
                                  uint64_t width, lbits value)
      = 0;
  virtual void mem_read_callback(const char *type, uint64_t paddr,
                                 uint64_t width, lbits value)
      = 0;
  virtual void mem_exception_callback(uint64_t paddr, uint64_t num_of_exception)
      = 0;
  virtual void xreg_full_write_callback(const_sail_string abi_name,
                                        unsigned reg, uint64_t value)
      = 0;
  virtual void freg_write_callback(unsigned reg, uint64_t value) = 0;
  virtual void csr_full_write_callback(const_sail_string csr_name, unsigned reg,
                                       uint64_t value)
      = 0;
  virtual void csr_full_read_callback(const_sail_string csr_name, unsigned reg,
                                      uint64_t value)
      = 0;
  virtual void vreg_write_callback(unsigned reg, lbits value) = 0;
  virtual void pc_write_callback(uint64_t value) = 0;
  virtual void trap_callback() = 0;
};

void register_callback_if(callbacks_if *cbi);
void remove_callback_if(callbacks_if *cbi);
