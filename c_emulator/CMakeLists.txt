set(EMULATOR_COMMON_SRCS
    riscv_config.h
    riscv_platform.cpp
    riscv_platform.h
    riscv_platform_impl.cpp
    riscv_platform_impl.h
    riscv_prelude.cpp
    riscv_prelude.h
    riscv_sail.h
    rvfi_dii.h
    rvfi_dii.cpp
    riscv_sim.cpp
    riscv_softfloat.c
    riscv_softfloat.h
)

foreach (xlen IN ITEMS 32 64)
    foreach (flen IN ITEMS 32 64)
        foreach (variant IN ITEMS "" "rvfi")
            set(arch "rv${xlen}")
            if (flen EQUAL 32)
                string(APPEND arch "f")
            else()
                string(APPEND arch "d")
            endif()
            if (variant)
                string(APPEND arch "_${variant}")
            endif()

            add_executable(riscv_sim_${arch}
                "${CMAKE_BINARY_DIR}/riscv_model_${arch}.c"
                ${EMULATOR_COMMON_SRCS}
            )
            # The generated model is not warnings-clean, silence them.
            # -Wno-self-assing is needed for `zhtif_tohost = zhtif_tohost`
            # generated by the sail code to avoid optimizing the function out.
            set(_generated_c_warning_opt_out
                -Wno-extra
                -Wno-unused
                -Wno-uninitialized
                $<$<BOOL:${HAVE_WSELF_ASSIGN}>:-Wno-self-assign>
            )
            set_source_files_properties("${CMAKE_BINARY_DIR}/riscv_model_${arch}.c"
                                        PROPERTIES COMPILE_OPTIONS "${_generated_c_warning_opt_out}")

            if (NOT arch IN_LIST DEFAULT_ARCHITECTURES)
                set_target_properties(riscv_sim_${arch} PROPERTIES EXCLUDE_FROM_ALL TRUE)
            endif()

            add_dependencies(riscv_sim_${arch} generated_model_${arch})

            target_link_libraries(riscv_sim_${arch}
                PRIVATE softfloat sail_runtime default_config GMP::GMP
            )

            target_include_directories(riscv_sim_${arch}
                # So the generated C can find riscv_platform/prelude.h"
                PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}"
            )

            if (arch MATCHES "rvfi")
                target_compile_definitions(riscv_sim_${arch}
                    PRIVATE RVFI_DII
                )
            endif()

            # TODO: Enable warnings when we use the #include trick
            # to include the generated Sail code. Currently it
            # generates too many warnings to turn these on globally.

            # target_compile_options(riscv_sim_${arch} PRIVATE
            #     -Wall -Wextra
            #     # Too annoying at the moment.
            #     -Wno-unused-parameter
            # )

            install(TARGETS riscv_sim_${arch}
                OPTIONAL
                RUNTIME DESTINATION "bin"
            )
        endforeach()
    endforeach()
endforeach()
